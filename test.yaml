openapi: 3.0.0
info:
  description: This is a SCDADL  API
  version: 1.0.0
  title: SCDADL API
  # put the contact info for your development or API team
  contact:
    email: karol.obalka@refinitiv.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular users
- name: niceToHave
  description: it is not needed for MVP
paths:
  /component-stack/{id}/config:
    get:
      tags:
        - users
      description: Get the component stack configuration by component stack id
      summary: Gets the component stack configuration by id
      operationId: getComponentStackConfigurationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A component stack configuration item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentStackConfig'
        404:
          description: not found
  /component-stack:
    get:
      tags:
      - users
      summary: searches component stacks by stack name, component name
      operationId: searchComponentStack
      parameters:
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/searchParam'
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentStack'
        400:
          description: bad input parameter
        404:
          description: not found
    post:
      tags:
      - admins
      summary: adds an component stack item
      operationId: addComponentStack
      description: Adds an item to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentStack'
        description: Component to add
      responses:
        201:
          description: created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /component-stack/{id}:
    get:
      tags:
      - users
      description: Get the component stack by id
      summary: Gets the component by id
      operationId: getComponentStackById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: A component stack item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentStack'
        404:
          description: not found
    put:
      tags:
      - users
      description: updates a component stack
      summary: updates a component stack
      operationId: updateComponentStackById
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentStack'
      responses:
        200:
          description: updated
        400:
          description: invalid input, object invalid
        404:
          description: not found
  /component-stack/{id}/versions:
    get:
      tags:
      - users
      description: Get the component stack versions by component stack id
      summary: Gets the component stack versions  by id
      operationId: getComponentStackVersionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: A component stack item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentStackVersion'
        404:
          description: not found
    post:
      tags:
      - users
      description: creates a new component stack version for Component Stack
      summary: creates a new component stack version
      operationId: createComponentStackVersion
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentStackVersion'
      responses:
        201:
          description: updated
        400:
          description: invalid input, object invalid
        404:
          description: not found
  /component-stack-versions:
    get:
      tags:
      - users
      summary: searches component stack version by component stack name, component name
      operationId: searchComponentStackVersion
      parameters:
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/searchParam'
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentStackVersion'
        400:
          description: bad input parameter
        404:
          description: not found
  /component-stack-versions/{id}:
    get:
      tags:
      - users
      summary: gets component stack version by id
      operationId: searchComponentStackVersionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: A component stack item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentStackVersion'
        404:
          description: not found

components:
  parameters:
    pageParam:
      in: query
      name: page
      required: false
      schema:
        type: integer
        minimum: 0
      description: The page number.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.
    searchParam:
      in: query
      name: search
      required: false
      schema:
        type: string
      description: The search string.
  schemas:
    Component:
      type: object
      required:
      - id
      - name
      - componentGroup
      - platform
      - assetInsightId
      properties:
        id:
          type: integer
          format: int32
          example: 101
        name:
          type: string
          example: Eikon_ABC
        componentGroup:
          type: string
          example: Eikon
        platform:
          type: string
          example: eikon
        assetInsightId:
          type: integer
          example: 2744
    ComponentVersionBase:
      type: object
      required:
      - id
      - packageUrl
      - version
      - qualityGrade
      properties:
        id:
          type: integer
          format: int32
          example: 101
        packageUrl:
          type: string
        version:
          type: string
          example: <major>.<minor>.<patch>-<build>-<label>
        qualityGrade:
          type: string
        versionValidated:
          type: string
          enum: [new, processing, true, false]
        versionValidationError:
          type: string
        versionAvoid:
          type: string
          enum: [Bad Release, Deprecated, Not Complete]
    ComponentVersion:
      allOf:
      - $ref: '#/components/schemas/ComponentVersionBase'
      - type: object
        properties:
          component:
            $ref: '#/components/schemas/Component'
      required:
      - id
      - packageUrl
      - version
      - qualityGrade
      - component
    ComponentVersionRequestBody:
      type: object
      required:
      - id
      - packageUrl
      - version
      - qualityGrade
      properties:
        id:
          type: integer
          format: int32
          example: 104
        packageUrl:
          type: string
        version:
          type: string
          example: <major>.<minor>.<patch>-<build>-<label>
        qualityGrade:
          type: string
        versionValidated:
          type: string
          enum: [new, processing, true, false]
        versionValidationError:
          type: string
        versionAvoid:
          type: string
          enum: [Bad Release, Deprecated, Not Complete]
    ComponenentServer:
      required:
      - name
      properties:
        id:
          type: integer
          format: int32
          example: 103
        hostname:
          type: string
          example: icolab
        environmentClass:
          type: string
          enum: [production, pre_production, integration_testing, quality_assurance, development, lab]
          example: production
        buildingCode:
          type: string
          example: DTC01
        location:
          type: string
        assetInsightID:
          type: string
        serverType:
          type: string
        environmentClassInstance:
          type: string
        metricGroup:
          type: string
    ComponentStack:
      required:
      - name
      properties:
        id:
          type: integer
          format: int32
          example: 102
        name:
          type: string
          example: EAS_Stack
        nextAutoVerStartAt:
          type: string
          example: 2.1.0
    ComponentStackVersion:
      required:
      - version
      properties:
        id:
          type: integer
          format: int32
          example: 54
        version:
          type: string
          example: 2.1.0
        validated:
          type: boolean
        puppetLastUsed:
          type: string
          format: date-time
        componentStack:
          $ref: '#/components/schemas/ComponentStack'
        componentConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/ComponentConfiguration'
    ComponentConfiguration:
      properties:
        id:
          type: integer
          format: int32
          example: 201
        componentVersion:
          $ref: '#/components/schemas/ComponentVersionBase'
        triggerNewStack:
          type: boolean
        minQualityGrade:
          type: string
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/kobalka9/scdadl2/1.0.0
